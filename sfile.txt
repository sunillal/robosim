#simulator settings
NUM_LEGS 5 # number of leg in the robot 
NUM_MODS 4 #number of modules per leg
NUM_BITS 4 #number of bits 
SIM_STEPSIZE 0.01 #ODE simulation step size
TRANSITION_STEP 80 #Defines how many time 
NUM_STATE_TRANS -1 # how many state transitions; -1 for dynamic 
TARGET_LEN 0.02 #Target length and angle (theta) defines the goal 
TARGET_THETA 0
ALPHA 1 #state weighting parameter for calculating fitness
MODE visual  #choose from visual, evolve
#Robustness testing; 1 at the ith row and jth column indicates that corresponding module is broken 
BROKEN	0 0 0 0 0 0
	0 0 0 0 0 0
	0 0 0 0 0 0
	0 0 0 0 0 0
	0 0 0 0 0 0 ;

#output files
RESULT_FILENAME ./result/result.txt
PARAM_FILENAME ./result/param.txt
#Input motion parameter file
IN_FILENAME iof.txt

#General optimization settings
MAX_CHR_SIZE 6
MIN_CHR_SIZE 1
GLEN 80  #gene length = num_legs*num_mods*num_bits
CLEN -1  # -1 for dynamic chromosome length
POP_SIZE 75  
MAX_GEN 400
SEED -1 # seed for random number generator; -1 randomises the seed
MR 0.005  # GA mutation rate
CR 0.8    # GA crossover rate

#types of controller to choose from
# CA1d - Cellular Automata 1 dimensional
# CA2dSing - Cellular Automata 2 dimensional singular transition rule 
# CA2dDiff - Cellular Automata 2 dimensional differential transition rule
# NNSin - Neural network controller with sinusoidal activation function
# NNSig - Neural network controller with sigmoidal activation function				
# FSMdbl - Finite State Machine with discrete state of modules represented by integers
# FSMint - Finite State Machine with continuous state of modules represented by double
CONTROLLER FSMint  

PROBLEM_TYPE minimize  # choose from minimise or maximise depending on the objective function 
FITNESS_EVAL directional #choose from linear, directional or angular
OFFSET 2000 #to transform maximization problem to minimization 

#CA2dDiff settings for chromosome length
CLENCR 16404
CLENLR 16484

#Differential Evolution algorithm settings
DE_STRATEGY Best1Bin
F 0.5

END
